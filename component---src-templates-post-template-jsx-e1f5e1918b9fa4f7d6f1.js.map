{"version":3,"sources":["webpack:///./src/templates/PostTemplate.jsx"],"names":["renderAst","RehypeReact","createElement","React","components","gallery","Gallery","gimg","Image","Link","Compiler","PostTemplate","_ref","data","markdownRemark","location","Layout","Fragment","SEO","title","frontmatter","description","excerpt","className","Fade","moment","date","format","bottom","distance","cascade","htmlAst","Icon","icon","PhotoswipeWrapper"],"mappings":"4FAAA,+LAgBA,MAAMA,EAAY,IAAIC,IAAY,CAChCC,cAAeC,IAAMD,cACrBE,WAAY,CACVC,QAASC,IACTC,KAAMC,IACNC,eAEDC,SAmCYC,UAjCMC,IAAA,IAAGC,MAAM,eAAEC,GAAgB,SAAEC,GAAUH,EAAA,OAC1DT,IAAAD,cAACc,IAAM,CAACD,SAAUA,GAChBZ,IAAAD,cAAAC,IAAAc,SAAA,KACEd,IAAAD,cAACgB,IAAG,CAACC,MAAOL,EAAeM,YAAYD,MAAOE,YAAaP,EAAeQ,UAC1EnB,IAAAD,cAAA,OAAKqB,UAAU,aACbpB,IAAAD,cAAA,eACEC,IAAAD,cAACsB,IAAI,KACHrB,IAAAD,cAAA,MAAIqB,UAAU,QAAQT,EAAeM,YAAYD,OACjDhB,IAAAD,cAAA,MAAIqB,UAAU,mBACZpB,IAAAD,cAAA,YAAM,mBACLuB,IAAOX,EAAeM,YAAYM,MAAMC,OAAO,QAIpDxB,IAAAD,cAACsB,IAAI,CAACI,QAAM,EAACC,SAAS,OAAOC,SAAO,GAAE9B,EAAUc,EAAeiB,WAGjE5B,IAAAD,cAAA,OAAKqB,UAAU,aACbpB,IAAAD,cAAA,OAAKqB,UAAU,aACbpB,IAAAD,cAAC8B,IAAI,CAACC,KAAK,cAIjB9B,IAAAD,cAACgC,IAAiB","file":"component---src-templates-post-template-jsx-e1f5e1918b9fa4f7d6f1.js","sourcesContent":["import React from 'react';\nimport RehypeReact from 'rehype-react';\nimport { Link, graphql } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport Fade from 'react-reveal/Fade';\n\nimport 'prismjs/themes/prism.css';\n\nimport Layout from '../components/layout';\nimport Icon from '../components/Icon';\nimport SEO from '../components/seo';\nimport Gallery from '../components/content/Gallery';\nimport PhotoswipeWrapper from '../components/content/PhotoswipeWrapper';\nimport Image from '../components/content/Image';\n\nconst renderAst = new RehypeReact({\n  createElement: React.createElement,\n  components: {\n    gallery: Gallery,\n    gimg: Image,\n    Link,\n  },\n}).Compiler;\n\nconst PostTemplate = ({ data: { markdownRemark }, location }) => (\n  <Layout location={location}>\n    <>\n      <SEO title={markdownRemark.frontmatter.title} description={markdownRemark.excerpt} />\n      <div className=\"container\">\n        <article>\n          <Fade>\n            <h1 className=\"mt-2\">{markdownRemark.frontmatter.title}</h1>\n            <h2 className=\"text-muted mb-4\">\n              <span>Yann Gouffon â€” </span>\n              {moment(markdownRemark.frontmatter.date).format('LL')}\n            </h2>\n          </Fade>\n\n          <Fade bottom distance=\"30px\" cascade>{renderAst(markdownRemark.htmlAst)}</Fade>\n        </article>\n\n        <div className=\"mt-4 mb-2\">\n          <div className=\"separator\">\n            <Icon icon=\"drakar\" />\n          </div>\n        </div>\n      </div>\n      <PhotoswipeWrapper />\n    </>\n  </Layout>\n);\n\nPostTemplate.propTypes = {\n  data: PropTypes.object.isRequired,\n  location: PropTypes.object.isRequired,\n};\n\nexport default PostTemplate;\n\nexport const query = graphql`\n  query PostByPath($path: String!) {\n    markdownRemark(frontmatter: { path: { eq: $path } }) {\n      htmlAst\n      excerpt(pruneLength: 300)\n      frontmatter {\n        date\n        path\n        title\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}
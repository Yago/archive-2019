{"version":3,"sources":["webpack:///./src/templates/ProjectTemplate.jsx"],"names":["renderAst","RehypeReact","createElement","React","components","gallery","Gallery","gimg","Image","Compiler","ProjectTemplate","_ref","data","markdownRemark","location","Layout","SEO","title","frontmatter","description","excerpt","className","Fade","subtitle","bottom","distance","agency","href","url","target","rel","name","open_source","roles","length","map","role","i","key","year","htmlAst","delay","src","cover","Fragment","sources","containerClass","itemClass","displayCaption","useThumb","PhotoswipeWrapper","Icon","icon"],"mappings":"8FAAA,8JAcA,MAAMA,EAAY,IAAIC,IAAY,CAChCC,cAAeC,IAAMD,cACrBE,WAAY,CACVC,QAASC,IACTC,KAAMC,OAEPC,SA8GYC,UA5GSC,IAAA,IAAGC,MAAM,eAAEC,GAAgB,SAAEC,GAAUH,EAAA,OAC7DR,IAAAD,cAACa,IAAM,CAACD,SAAUA,GAChBX,IAAAD,cAACc,IAAG,CAACC,MAAOJ,EAAeK,YAAYD,MAAOE,YAAaN,EAAeO,UAE1EjB,IAAAD,cAAA,OAAKmB,UAAU,mBACblB,IAAAD,cAAA,OAAKmB,UAAU,YACblB,IAAAD,cAAA,WAASmB,UAAU,0FACjBlB,IAAAD,cAAA,WACEC,IAAAD,cAACoB,IAAI,KACHnB,IAAAD,cAAA,UAAKW,EAAeK,YAAYD,OAChCd,IAAAD,cAAA,MAAImB,UAAU,sBAAsBR,EAAeK,YAAYK,YAInEpB,IAAAD,cAACoB,IAAI,CAACE,QAAM,EAACC,SAAS,QACpBtB,IAAAD,cAAA,SAAOmB,UAAU,qDACflB,IAAAD,cAAA,aACGW,EAAeK,YAAYQ,QAC1BvB,IAAAD,cAAA,UACEC,IAAAD,cAAA,UAAI,UACJC,IAAAD,cAAA,UACEC,IAAAD,cAAA,KACEyB,KAAMd,EAAeK,YAAYQ,OAAOE,IACxCP,UAAU,YACVQ,OAAO,SACPC,IAAI,uBAEHjB,EAAeK,YAAYQ,OAAOK,QAK1ClB,EAAeK,YAAYc,aAC1B7B,IAAAD,cAAA,UACEC,IAAAD,cAAA,UAAI,eACJC,IAAAD,cAAA,UACEC,IAAAD,cAAA,KACEyB,KAAMd,EAAeK,YAAYc,YAAYJ,IAC7CP,UAAU,YACVQ,OAAO,SACPC,IAAI,uBAEHjB,EAAeK,YAAYc,YAAYD,QAK/ClB,EAAeK,YAAYe,OAC1B9B,IAAAD,cAAA,UACEC,IAAAD,cAAA,UACEC,IAAAD,cAAA,YAAM,QACLW,EAAeK,YAAYe,MAAMC,OAAS,GAAK,KAElD/B,IAAAD,cAAA,UACGW,EAAeK,YAAYe,MAAME,IAAI,CAACC,EAAMC,IAC3ClC,IAAAD,cAAA,QAAMoC,IAAKD,GACRD,EACDjC,IAAAD,cAAA,eAMTW,EAAeK,YAAYqB,MAC1BpC,IAAAD,cAAA,UACEC,IAAAD,cAAA,UAAI,QACJC,IAAAD,cAAA,UAAKW,EAAeK,YAAYqB,SAMxCpC,IAAAD,cAAA,OAAKmB,UAAU,gBAAgBrB,EAAUa,EAAe2B,YAI5DrC,IAAAD,cAAA,OAAKmB,UAAU,4DACblB,IAAAD,cAACoB,IAAI,CAACE,QAAM,EAACC,SAAS,OAAOgB,MAAO,KAAKtC,IAAAD,cAACM,IAAK,CAACkC,IAAK7B,EAAeK,YAAYyB,WAInF9B,EAAeK,YAAYb,SAC1BF,IAAAD,cAAAC,IAAAyC,SAAA,KACEzC,IAAAD,cAACI,IAAO,CACNuC,QAAShC,EAAeK,YAAYb,QACpCyC,eAAe,WACfC,UAAU,0BACVC,gBAAgB,EAChBC,UAAQ,IAEV9C,IAAAD,cAACgD,IAAiB,OAItB/C,IAAAD,cAAA,OAAKmB,UAAU,aACblB,IAAAD,cAAA,OAAKmB,UAAU,aACblB,IAAAD,cAACiD,IAAI,CAACC,KAAK","file":"component---src-templates-project-template-jsx-3c1ee63a58f987c58d5b.js","sourcesContent":["import React from 'react';\nimport RehypeReact from 'rehype-react';\nimport { graphql } from 'gatsby';\nimport Fade from 'react-reveal/Fade';\nimport PropTypes from 'prop-types';\nimport 'prismjs/themes/prism.css';\n\nimport Layout from '../components/layout';\nimport Icon from '../components/Icon';\nimport SEO from '../components/seo';\nimport Gallery from '../components/content/Gallery';\nimport PhotoswipeWrapper from '../components/content/PhotoswipeWrapper';\nimport Image from '../components/content/Image';\n\nconst renderAst = new RehypeReact({\n  createElement: React.createElement,\n  components: {\n    gallery: Gallery,\n    gimg: Image,\n  },\n}).Compiler;\n\nconst ProjectTemplate = ({ data: { markdownRemark }, location }) => (\n  <Layout location={location}>\n    <SEO title={markdownRemark.frontmatter.title} description={markdownRemark.excerpt} />\n\n    <div className=\"container-fluid\">\n      <div className=\"row mt-2\">\n        <article className=\"col-sm-6 offset-sm-1 d-flex align-items-start flex-column justify-content-between mb-2\">\n          <div>\n            <Fade>\n              <h1>{markdownRemark.frontmatter.title}</h1>\n              <h2 className=\"h3 text-muted mb-2\">{markdownRemark.frontmatter.subtitle}</h2>\n            </Fade>\n          </div>\n\n          <Fade bottom distance=\"30px\">\n            <table className=\"text-sans text-sm table table-borderless table-sm\">\n              <tbody>\n                {markdownRemark.frontmatter.agency && (\n                  <tr>\n                    <td>Agency</td>\n                    <td>\n                      <a\n                        href={markdownRemark.frontmatter.agency.url}\n                        className=\"link-grad\"\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                      >\n                        {markdownRemark.frontmatter.agency.name}\n                      </a>\n                    </td>\n                  </tr>\n                )}\n                {markdownRemark.frontmatter.open_source && (\n                  <tr>\n                    <td>Open Source</td>\n                    <td>\n                      <a\n                        href={markdownRemark.frontmatter.open_source.url}\n                        className=\"link-grad\"\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                      >\n                        {markdownRemark.frontmatter.open_source.name}\n                      </a>\n                    </td>\n                  </tr>\n                )}\n                {markdownRemark.frontmatter.roles && (\n                  <tr>\n                    <td>\n                      <span>Role</span>\n                      {markdownRemark.frontmatter.roles.length > 1 && 's'}\n                    </td>\n                    <td>\n                      {markdownRemark.frontmatter.roles.map((role, i) => (\n                        <span key={i}>\n                          {role}\n                          <br />\n                        </span>\n                      ))}\n                    </td>\n                  </tr>\n                )}\n                {markdownRemark.frontmatter.year && (\n                  <tr>\n                    <td>year</td>\n                    <td>{markdownRemark.frontmatter.year}</td>\n                  </tr>\n                )}\n              </tbody>\n            </table>\n\n            <div className=\"mt-auto mb-0\">{renderAst(markdownRemark.htmlAst)}</div>\n          </Fade>\n        </article>\n\n        <div className=\"col-sm-4 offset-sm-1 order-first order-md-2 mb-2 mb-md-0\">\n          <Fade bottom distance=\"30px\" delay={400}><Image src={markdownRemark.frontmatter.cover} /></Fade>\n        </div>\n      </div>\n\n      {markdownRemark.frontmatter.gallery && (\n        <>\n          <Gallery\n            sources={markdownRemark.frontmatter.gallery}\n            containerClass=\"row mt-4\"\n            itemClass=\"col-sm-3 mb-2 img-fluid\"\n            displayCaption={false}\n            useThumb\n          />\n          <PhotoswipeWrapper />\n        </>\n      )}\n\n      <div className=\"mt-4 mb-2\">\n        <div className=\"separator\">\n          <Icon icon=\"drakar\" />\n        </div>\n      </div>\n    </div>\n  </Layout>\n);\n\nProjectTemplate.propTypes = {\n  data: PropTypes.object.isRequired,\n  location: PropTypes.object.isRequired,\n};\n\nexport default ProjectTemplate;\n\nexport const query = graphql`\n  query ProjectByPath($path: String!) {\n    markdownRemark(frontmatter: { path: { eq: $path } }) {\n      htmlAst\n      excerpt(pruneLength: 300)\n      frontmatter {\n        path\n        title\n        subtitle\n        cover\n        agency {\n          name\n          url\n        }\n        open_source {\n          name\n          url\n        }\n        year\n        roles\n        gallery {\n          src\n          caption\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}